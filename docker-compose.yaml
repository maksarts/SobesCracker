version: '3.7'

services:
  sobescracker:
    image: ghcr.io/maksarts/sobescracker:latest
    container_name: sobescracker
    depends_on:
      - sobescracker_db
    ports:
      - "8080:8080"
    networks:
      core:
        aliases:
          - "sobescracker"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://sobescracker_db:5432/sobescracker_db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - TELEGRAM_MAIN_TOKEN=${TELEGRAM_MAIN_TOKEN}
      - TELEGRAM_ADMIN_TOKEN=${TELEGRAM_ADMIN_TOKEN}
      - TELEGRAM_LOG_TOKEN=${TELEGRAM_LOG_TOKEN}
      - TELEGRAM_MAIN_USERNAME=${TELEGRAM_MAIN_USERNAME}
      - TELEGRAM_ADMIN_USERNAME=${TELEGRAM_ADMIN_USERNAME}
      - TELEGRAM_LOG_USERNAME=${TELEGRAM_LOG_USERNAME}
      - TELEGRAM_LOG_CHAT_ID=${TELEGRAM_LOG_CHAT_ID}

  sobescracker_db:
    image: postgres:13.3
    container_name: sobescracker_db
    environment:
      POSTGRES_DB: "sobescracker_db"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./data:/var/lib/postgresql/data
      - .:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready -U admin -d sobescracker_db" ]
      interval: 2m
      timeout: 20s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2000M
    networks:
      core:
        aliases:
          - "sobescracker_db"

networks:
  core:
    driver: bridge